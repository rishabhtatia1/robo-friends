{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","id","name","email","className","alt","src","CardList","robots","map","item","SearchBox","searchOnChangeHandler","type","placeholder","onChange","Scroll","children","App","useState","isLoading","setisLoading","robotsList","setRobotsList","inputSearch","setinputSearch","fetchData","a","axios","get","response","data","useEffect","updatedRobots","filter","toLowerCase","includes","e","value","target","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,8CCOCQ,EAZF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACxB,OACE,sBAAKC,UAAU,mDAAf,UACE,qBAAKC,IAAI,SAASC,IAAG,+BAA0BL,KAC/C,gCACE,6BAAKC,IACL,4BAAIC,WCYGI,EAjBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAClB,OACE,8BACGA,EAAOC,KAAI,SAACC,GACX,OACE,cAAC,EAAD,CAEET,GAAIS,EAAKT,GACTC,KAAMQ,EAAKR,KACXC,MAAOO,EAAKP,OAHPO,EAAKT,UCMPU,G,MAbG,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,sBACnB,OACE,qBAAKR,UAAU,MAAf,SACE,uBACEA,UAAU,mCACVS,KAAK,SACLC,YAAY,gBACZC,SAAUH,Q,iBCFHI,G,MAJA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAChB,OAAO,qBAAKb,UAAU,SAAf,SAAyBa,MCkDnBC,EA/CH,WAAO,IAAD,EACkBC,oBAAS,GAD3B,mBACTC,EADS,KACEC,EADF,OAEoBF,mBAAS,IAF7B,mBAETG,EAFS,KAEGC,EAFH,OAGsBJ,mBAAS,IAH/B,mBAGTK,EAHS,KAGIC,EAHJ,KAQVC,EAAS,uCAAG,4BAAAC,EAAA,6DAChBN,GAAa,GADG,kBAGSO,IAAMC,IAC3B,8CAJY,OAGRC,EAHQ,OAMdP,EAAa,OAACO,QAAD,IAACA,OAAD,EAACA,EAAUC,MANV,gDAQdR,EAAc,IARA,yBAUdF,GAAa,GAVC,4EAAH,qDAafW,qBAAU,WACRN,MACC,IACH,IAAMO,EAAgBX,EAAWY,QAAO,SAACxB,GAAD,OACtCA,EAAKR,KAAKiC,cAAcC,SAASZ,EAAYW,kBAE/C,OACE,sBAAK/B,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,0BACA,cAAC,EAAD,CACEoB,YAAaA,EACbZ,sBA5BwB,SAACyB,GAAO,IAC5BC,EAAUD,EAAEE,OAAZD,MACRb,EAAea,MA4BZlB,EACC,0CACE,OAACa,QAAD,IAACA,OAAD,EAACA,EAAeO,QAGlB,cAAC,EAAD,UACE,cAAC,EAAD,CAAUhC,OAAQyB,MAHpB,qDCrCRQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BtD,M","file":"static/js/main.509119fc.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\n\r\nconst Card = ({ id, name, email }) => {\r\n  return (\r\n    <div className=\"bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n      <img alt=\"robots\" src={`https://robohash.org/${id}`} />\r\n      <div>\r\n        <h2>{name}</h2>\r\n        <p>{email}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Card from \"./Card\";\r\n\r\nconst CardList = ({ robots }) => {\r\n  return (\r\n    <div>\r\n      {robots.map((item) => {\r\n        return (\r\n          <Card\r\n            key={item.id}\r\n            id={item.id}\r\n            name={item.name}\r\n            email={item.email}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardList;\r\n","import React from \"react\";\r\n\r\nconst SearchBox = ({ searchOnChangeHandler }) => {\r\n  return (\r\n    <div className=\"pa2\">\r\n      <input\r\n        className=\"pa2 ba b--green bg-lightest-blue\"\r\n        type=\"search\"\r\n        placeholder=\"Search robots\"\r\n        onChange={searchOnChangeHandler}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React from \"react\";\r\nimport \"./Scroll.css\";\r\n\r\nconst Scroll = ({ children }) => {\r\n  return <div className=\"scroll\">{children}</div>;\r\n};\r\n\r\nexport default Scroll;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport CardList from \"../components/CardList\";\r\nimport \"./App.css\";\r\nimport SearchBox from \"../components/SearchBox\";\r\nimport axios from \"axios\";\r\nimport Scroll from \"../components/Scroll\";\r\n\r\nconst App = () => {\r\n  const [isLoading, setisLoading] = useState(false);\r\n  const [robotsList, setRobotsList] = useState([]);\r\n  const [inputSearch, setinputSearch] = useState(\"\");\r\n  const searchOnChangeHandler = (e) => {\r\n    const { value } = e.target;\r\n    setinputSearch(value);\r\n  };\r\n  const fetchData = async () => {\r\n    setisLoading(true);\r\n    try {\r\n      const response = await axios.get(\r\n        \"https://jsonplaceholder.typicode.com/users\"\r\n      );\r\n      setRobotsList(response?.data);\r\n    } catch {\r\n      setRobotsList([]);\r\n    } finally {\r\n      setisLoading(false);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n  const updatedRobots = robotsList.filter((item) =>\r\n    item.name.toLowerCase().includes(inputSearch.toLowerCase())\r\n  );\r\n  return (\r\n    <div className=\"tc\">\r\n      <h1 className=\"f1\">ROBO FRIENDS</h1>\r\n      <SearchBox\r\n        inputSearch={inputSearch}\r\n        searchOnChangeHandler={searchOnChangeHandler}\r\n      />\r\n      {isLoading ? (\r\n        <h1>LOADING</h1>\r\n      ) : !updatedRobots?.length ? (\r\n        <h1>NO ROBOTS FOUND</h1>\r\n      ) : (\r\n        <Scroll>\r\n          <CardList robots={updatedRobots} />\r\n        </Scroll>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"tachyons\";\nimport App from \"./containers/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}